{"version":3,"sources":["services/request.js","services/quoteGen.js","components/navbar.js","services/convertTemp.js","components/quick-city.js","services/renderWeatherIcons.js","const.js","components/map.js","components/home.js","components/weather.js","components/404.js","App.js","serviceWorker.js","index.js"],"names":["APIRequest","Object","classCallCheck","this","apiKey","location","type","name","trim","replace","fetch","concat","then","response","json","myJson","Promise","all","getDailyWeather","locations","_this","promise","map","resolve","reject","QuoteGen","res","NavBar","props","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","search","target","value","handleSubmit","preventDefault","request","state","updateLocation","quote","_this2","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","content","title","onSubmit","bind","TextField_default","id","label","onChange","placeholder","required","Button_default","variant","color","React","Component","convertTemp","temp","isChecked","Math","ceil","QuickCity","handleClick","assertThisInitialized","data","onClick","country","checked","weatherDesc","renderWeatherIcons","weather","index","date","split","toLowerCase","indexOf","Const","slider","settings","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","backgroundColor","borderColor","borderWidth","pointBackgroundColor","mapsAPIKey","GoogleMap","center","lat","lng","zoom","coord","lon","nextProps","prevProps","style","height","width","google_map_react_lib_default","bootstrapURLKeys","key","defaultZoom","Home","savedCities","myCities","city","quick_city_QuickCity","sys","main","tempMin","temp_min","tempMax","temp_max","weatherType","description","ACTION","saveCity","_this3","JSON","parse","localStorage","getItem","find","length","lib_default","displayMyCities","textAlign","minHeight","fiveDayForecastDesc","week","moment","dt_txt","format","fiveDayForecast","chartData","labels","datasets","displaySlider","displaySaveBtnCity","desc","es","options","map_GoogleMap","Weather","console","log","action","isSavedCityBtn","NoMatch","App","handleToggle","cityId","mainDesc","user","notFound","setItem","stringify","navigator","geolocation","getCurrentPosition","position","reverseLookup","copyState","results","components","quickWeather","requestCities","_this4","savedCitiesCopy","item","unshift","filter","cod","dt","list","_this5","navbarProps","homeProps","navbar_NavBar","FormGroup_default","row","FormControlLabel_default","control","Switch_default","BrowserRouter","Switch","Route","exact","path","build","render","home_Home","assign","weather_Weather","component","Boolean","window","hostname","match","href","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db558c4f.chunk.js","sourcesContent":["class APIRequest {\n\tconstructor() {\n\t\tthis.apiKey =  \"45c4b9b7ef7e561a24ebdbf9f36f4e44\"; //bf9e0d64e01426353f9edd3d027204a8\n\t}\n\tgetDailyWeather(location, type) {\n\t\t\n\t\tconst name = location.trim().replace(/ /g, '+');\n\n\t\treturn fetch(`https://api.openweathermap.org/data/2.5/${type}?q=${name}&appid=${this.apiKey}`)\n\t\t  .then(function(response) {\n\t\t    return response.json();\n\t\t  })\n\t\t  .then(function(myJson) {\n\t\t    return myJson;\n\t\t  });\n\t}\n\n\treverseLookup() {\n\t\treturn fetch(\"https://api.opencagedata.com/geocode/v1/json?q=43.6772864+-79.2788992&key=1cf4f4a9be7544b78ad327e028757a33\").then(function(response){\n\t\t\treturn response.json();\n\t\t}).then(function(myJson){\n\t\t\treturn myJson;\n\t\t})\n\t}\n\n\trequest(location) {\n\t\treturn Promise.all([this.getDailyWeather(location, 'weather'), this.getDailyWeather(location, 'forecast')]);\n\t}\n\n\trequestCities(locations) {\n\n\t\tlet promise = locations.map(location=>{\n\t\t\treturn new Promise((resolve, reject)=>{\n\t\t\t\tresolve(this.getDailyWeather(location, 'weather'));\n\t\t\t})\n\t\t})\n\n\t\treturn Promise.all(promise);\n\t}\n}\n\nexport default APIRequest;\n","const QuoteGen = () => {\n\treturn fetch('https://cors-anywhere.herokuapp.com/http://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=1').then(res=>{\n\t\treturn res.json()\n\t}).then(json=>{\n\t\treturn json;\n\t})\n}\n\nexport default QuoteGen;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport APIRequest from '../services/request';\nimport QuoteGen from '../services/quoteGen';\n\nexport default class NavBar extends React.Component {\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = { \n            search: '',\n            quote: {}\n        };\n\t}\n\n    componentDidMount() {\n        new QuoteGen().then(quote => this.setState({ quote: quote[0] }))\n    }\n\n    handleChange = (e) => {\n        this.setState({ search: e.target.value });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        new APIRequest().request(this.state.search).then(res=>{\n            this.props.updateLocation(res);\n        });\n\n        this.setState({ search: '' });\n    }\n\trender() {\n\t\treturn (\n\t\t\t<nav>\n\t\t\t\t<div className=\"nav-header\" dangerouslySetInnerHTML={{__html: `${this.state.quote.content} <p class=\"quote-auth\">- <i>${this.state.quote.title}</i></p>`}}/>\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                    <TextField\n                        id=\"input\"\n                        label=\"Location\"\n                        value={this.state.search}\n                        onChange={this.handleChange}\n                        placeholder=\"toronto, canada\"\n                        required\n                    />  \n                    <Button type=\"submit\" onSubmit={this.handleSubmit.bind(this)} variant=\"contained\" color=\"primary\" className=\"btn-submit\">Search</Button>                 \n                </form>  \t\t\n\t\t\t</nav>\n\t\t)\n\t}\n}\n","export const convertTemp = (temp, isChecked) => {\n\t\n\t// isChecked = false (Celsius)\n\t// isChecked = true (farenheit)\n\n\treturn isChecked === true ? Math.ceil((temp - 273.15) * 9/5 + 32) : Math.ceil(temp - 273.15);\n}\n","import React from 'react';\nimport APIRequest from '../services/request';\nimport {convertTemp} from '../services/convertTemp';\n\nexport default class QuickCity extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\t\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick() {\n\t\tnew APIRequest().request(this.props.name).then(data=>{\n\t\t\t\n\t\t\tthis.props.updateLocation(data);\n\t\t})\n\t}\n\n\trender() {\n\n\t\tconst { location } = this.props;\n\t\t\n\t\treturn (\n\t\t\t\t<div className=\"quick-city-body\" onClick={this.handleClick}>\n\t\t\t\t\t<p className=\"quick-city__name\">{this.props.name}, {this.props.country}</p>\n\t\t\t\t\t<div className=\"x\">\n\t\t\t\t\t\t<p className=\"quick-city__temp\">{convertTemp(this.props.temp, this.props.checked)}<sup>&#176;{this.props.checked ? 'F' : 'C'}</sup></p>\n\t\t\t\t\t\t<p className=\"quick-city__weather-desc\">{this.props.weatherDesc}</p>\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react';\n\nexport const renderWeatherIcons = (data)=>{\n\t\treturn data.map((weather, index) => {\n\t\t\tconst date = weather.date ? weather.date.split(\",\")[0] : '';\n\t\n\t\t\tif(weather.weatherDesc.toLowerCase().indexOf('clouds') > -1) {\n\t\t\t\treturn \t(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-day-cloudy\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('clear') > -1){\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-day-sunny\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\n\t\t\t}\n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('thunderstorm') > -1) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-day-thunderstorm\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\n\t\t\t}\n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('drizzle') > -1){\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-day-sprinkle\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\n\t\t\t}\n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('rain') > -1 || weather.weatherDesc.toLowerCase().indexOf('mist') > -1){\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-day-rain\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\n\t\t\t}\t\t\t\n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('snow') > -1){\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-snow\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\n\t\t\t}\t\t\t\n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('smoke') > -1) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-smoke\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\t\t\n\t\t\t} \n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('haze') > -1) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-day-haze\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\t\t\t\n\t\t\t} \n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('dust whirls') > -1 || weather.weatherDesc.toLowerCase().indexOf('sand') > -1) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-sandstorm\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\t\t\t\n\t\t\t} \n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('fog') > -1) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-day-fog\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\t\t\t\t\n\t\t\t} \n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('volcanic ash') > -1) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-volcano\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\t\t\t\t\t\n\t\t\t} \n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('squalls') > -1) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-sleet\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\t\t\t\n\t\t\t}\n\t\t\telse if(weather.weatherDesc.toLowerCase().indexOf('tornado') > -1) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i className=\"wi wi-tornado\" />\n\t\t\t\t\t\t<p className=\"forecast-date\">{date}</p>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t)\t\t\t\n\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t})\n}\n\nexport default renderWeatherIcons;","export const Const = {\n\tslider: {\n\t\tsettings: {\n\t      dots: false,\n\t      infinite: false,\n\t      speed: 500,\n\t      slidesToShow: 7,\n\t      slidesToScroll: 1,\n\t      responsive: [\n\t        {\n\t          breakpoint: 1024,\n\t          settings: {\n\t            slidesToShow: 5\n\t          }\n\t        },\n\t        {\n\t          breakpoint: 600,\n\t          settings: {\n\t            slidesToShow: 3\n\t          }\n\t        },\n\t        {\n\t          breakpoint: 480,\n\t          settings: {\n\t            slidesToShow: 1\n\t          }\n\t        }\n\t      ],\t      \n\t\t},\n\t\tlabel: \"5 DAY FOREACAST\",\n\t\tbackgroundColor: '#0074ff0f',\n\t\tborderColor: \"#85919f\",\n\t\tborderWidth: 1,\n\t\tpointBackgroundColor: \"#85919f\",\t\n\t},\n\tmapsAPIKey: 'AIzaSyAdOrgGoSsaX6ApmqF8WlnhNKNzbhqQuIU'\n}\n\nexport default Const;","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nexport default class GoogleMap extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            center: {\n                lat: 0,\n                lng: 0\n            },\n            zoom: 15\n        }\n    }\n\n    componentDidMount() {\n\n        let coord = {\n            lat: this.props.coord.lat,\n            lng: this.props.coord.lon,\n        }\n\n        this.setState({ center: coord });\n    }\n\n    componentWillReceiveProps(nextProps, prevProps) {\n        \n        let coord = {\n            lat: nextProps.coord.lat,\n            lng: nextProps.coord.lon,\n        }\n\n        this.setState({ center: coord });       \n    }\n\n    render() {\n        return (\n            <div style={{ height: '500px', width: '100%' }}>\n                <GoogleMapReact\n                    bootstrapURLKeys={{ key: 'AIzaSyAdOrgGoSsaX6ApmqF8WlnhNKNzbhqQuIU' }}\n                    center={this.state.center}\n                    defaultZoom={this.state.zoom}\n                >\n                </GoogleMapReact>\n            </div>    \n        )\n    }\n}\n","import React from 'react';\nimport QuickCity from './/quick-city';\nimport Slider from \"react-slick\";\nimport Button from '@material-ui/core/Button';\nimport {Line} from 'react-chartjs-2';\nimport moment from 'moment';\nimport {convertTemp} from '../services/convertTemp';\nimport {renderWeatherIcons} from '../services/renderWeatherIcons';\nimport Const from '../const';\nimport GoogleMap from './map';\n\nexport default class Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsavedCities: []\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps, prevProps) {\n\t\t\n\t\tif(nextProps !== prevProps) {\n\t\t\tthis.setState({ savedCities: nextProps.savedCities})\n\t\t}\n\t}\n\n    displayMyCities() {\n        return this.props.myCities.map(city => {\n            return <QuickCity \tname={city.name} \n            \t\t\t\t\tcountry={city.sys.country} \n            \t\t\t\t\ttemp={city.main.temp}  \n            \t\t\t\t\ttempMin={city.main.temp_min}\n            \t\t\t\t\ttempMax={city.main.temp_max}\n            \t\t\t\t\tweatherType={city.weather[0].main} \n            \t\t\t\t\tweatherDesc={city.weather[0].description}\n            \t\t\t\t\tchecked={this.props.checked}\n            \t\t\t\t\tupdateLocation={this.props.updateLocation}\n            \t\t/>\n        })\n    }\n    handleClick(ACTION) {\n    \tthis.props.saveCity(this.props.location.city, ACTION);\n    }\n\tdisplaySaveBtnCity() {\n\t\tlet storage=JSON.parse(localStorage.getItem(\"savedCities\"));\n\t\tlet match = storage.find(city=>city===this.props.location.city);\n\n\t\tif(match){\n\t\t\treturn <Button variant=\"contained\" color=\"primary\" onClick={this.handleClick.bind(this, 'REMOVE')} className=\"btn-save\">Remove</Button>\n\t\t}\n\t\t\treturn <Button variant=\"contained\" color=\"primary\" onClick={this.handleClick.bind(this,'ADD')} className=\"btn-save\">Save</Button>\n\n\t}\n\n\tdisplaySlider() {\n\t\tif(!JSON.parse(localStorage.getItem(\"savedCities\")).length || JSON.parse(localStorage.getItem(\"savedCities\")) === null) {\n\t\t\treturn <p style={{ textAlign: 'center', minHeight: '89px' }}>You have no saved locations</p>\n\t\t}\n\n\t\treturn (\n\t\t\t<Slider {...Const.slider.settings}>\n\t\t\t\t{this.displayMyCities()}\n\t\t\t</Slider>\n\t\t)\t\t\n\t}\n\n\trender() {\n\n\t\tconst { location } = this.props;\n\t\t\n\t    const fiveDayForecastDesc = [\n\t\t\t{\n\t\t\t\tweatherDesc: location.week[3].weather[0].main,\n\t\t\t\tdate: moment(location.week[3].dt_txt).format(\"ll\")\n\t\t\t},\n\t\t\t{\n\t\t\t\tweatherDesc: location.week[11].weather[0].main,\n\t\t\t\tdate: moment(location.week[11].dt_txt).format(\"ll\")\n\t\t\t},\n\t\t\t{\n\t\t\t\tweatherDesc: location.week[19].weather[0].main,\n\t\t\t\tdate: moment(location.week[19].dt_txt).format(\"ll\")\n\t\t\t},\n\t\t\t{\n\t\t\t\tweatherDesc: location.week[27].weather[0].main,\n\t\t\t\tdate: moment(location.week[27].dt_txt).format(\"ll\")\n\t\t\t},\n\t\t\t{\n\t\t\t\tweatherDesc: location.week[31].weather[0].main,\n\t\t\t\tdate: moment(location.week[31].dt_txt).format(\"ll\")\n\t\t\t}\n\t\t];\n\n\t    const fiveDayForecast = [\n\t\t\tconvertTemp(location.week[3].main.temp, this.props.checked),\n\t\t\tconvertTemp(location.week[11].main.temp, this.props.checked), \n\t\t\tconvertTemp(location.week[19].main.temp, this.props.checked), \n\t\t\tconvertTemp(location.week[27].main.temp, this.props.checked), \n\t\t\tconvertTemp(location.week[31].main.temp, this.props.checked)\n\t\t]\n\n\t\tconst chartData = {\n\t\t\tlabels: [\t\n\t\t\t\tmoment(this.props.location.week[3].dt_txt).format(\"ll\"), \n\t\t\t\tmoment(this.props.location.week[11].dt_txt).format(\"ll\"), \n\t\t\t\tmoment(this.props.location.week[19].dt_txt).format(\"ll\"), \n\t\t\t\tmoment(this.props.location.week[27].dt_txt).format(\"ll\"), \n\t\t\t\tmoment(this.props.location.week[31].dt_txt).format(\"ll\")\n\t\t\t],\n\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: Const.slider.label,\n\t\t\t\t\tbackgroundColor: Const.slider.backgroundColor,\n\t\t\t\t\tborderColor: Const.slider.borderColor,\n\t\t\t\t\tborderWidth: Const.slider.borderWidth,\n\t\t\t\t\tpointBackgroundColor: Const.slider.pointBackgroundColor,\n\t\t\t\t\tdata: fiveDayForecast\n\t\t\t\t}\n\t\t\t]\n\t\t};\t\t\t\n\n\t\treturn (\n\t\t\t<div className=\"body\">\n\t\t\t\n\t\t\t\t{this.displaySlider()}\n\n\t\t\t\t<div className=\"user-temp\">\n\t\t\t\t\t{this.displaySaveBtnCity()}\n\t\t\t\t\t<div className=\"user-temp__body\">\n\t\t\t\t\t\t<h3 className=\"user-temp__location\">{location.city}, {location.country}</h3>\n\t\t\t\t\t\t<h4 className=\"user-temp__date\">{moment().format('LLL')}</h4>\n\t\t\t\t\t\t<div className=\"user-temp__inner\">\n\n\t\t\t\t\t\t\t{renderWeatherIcons([{weatherDesc: location.weather.main, date: ''}])}\n\n\t\t\t\t\t\t\t<p className=\"user-temp__main\">{convertTemp(location.main.temp, this.props.checked)}<sup>&#176;{this.props.checked ? 'F' : 'C'}</sup></p>\n\t\t\t\t\t\t\t<div className=\"user-temp__detail\">\n\t\t\t\t\t\t\t\t<p className=\"user-temp__desc\">{location.weather.main}</p>\n\t\t\t\t\t\t\t\t<p className=\"user-temp__desc2\">{location.weather.desc}</p>\t\t\n\t\t\t\t\t\t\t\t<div className=\"user-temp__desc3\">\n\t\t\t\t\t\t\t\t\t<p className=\"user-temp__high\">High <span>{convertTemp(this.props.location.main.tempMax,this.props.checked)}<sup>&#176;{this.props.checked ? 'F' : 'C'}</sup></span></p>\n\t\t\t\t\t\t\t\t\t<p className=\"user-temp__high\">Low <span>{convertTemp(this.props.location.main.tempMin, this.props.checked)}<sup>&#176;{this.props.checked ? 'F' : 'C'}</sup></span></p>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n                    </div>\n\n                    <div className=\"user-temp__side\">\n\t\t\t\t\t\t<div className=\"user-temp__fiveday\">\n\t\t\t\t\t\t\t{renderWeatherIcons(fiveDayForecastDesc)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Line data={chartData} options={{ responsive: true}}/>\n                    </div>\n\t\t\t\t</div>\n\n\t\t\t\t<GoogleMap coord={this.props.location.coord} />\n\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","import React from 'react';\nimport moment from 'moment';\n\nexport default class Weather extends React.Component {\n\t\n\tcomponentDidMount(){\n\t\tconsole.log(this.props)\n\t}\n\n\tupdateCity(action){\n\t\tthis.props.saveCity(this.props.city.toLowerCase(), action);\n\t}\n\n\tisSavedCityBtn() {\n\t\t\n\t\t// let isFound = this.props.saveCityState.find(city => city === this.props.city.toLowerCase());\n\n\t\t// return isFound ? \t<button onClick={this.updateCity.bind(this, 'REMOVE')}>remove city</button> : \n\t\t// \t\t\t\t\t<button onClick={this.updateCity.bind(this, 'ADD')}>save city</button>;\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>{this.props.city}</p>\n\t\t\t\t<p>{this.props.coord.lon}, {this.props.coord.lat}</p>\n\t\t\t\t<p>{moment(this.props.date*1000).format(\"LLLL\")}</p>\n\t\t\t\t<p>{Math.ceil(this.props.main.temp - 273.15)}</p>\n\t\t\t\t<p>{this.props.main.tempMax - 273.15}</p>\n\t\t\t\t<p>{this.props.main.tempMin - 273.15}</p>\n\t\t\t\t<p>{this.props.weather.main}</p>\n\t\t\t\t<p>{this.props.weather.desc}</p>\n\t\t\t\t{this.isSavedCityBtn()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react';\n\nconst NoMatch = () => {\n\treturn <div>Page not found</div>;\n}\n\nexport default NoMatch;","import React, { Component } from 'react';\nimport { BrowserRouter, Switch as RouterSwitch, Route } from 'react-router-dom';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport APIRequest from './services/request';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport NavBar from './components/navbar';\nimport Home from './components/home';\nimport Weather from './components/weather';\nimport NoMatch from './components/404';\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props); \n    this.saveCity = this.saveCity.bind(this);\n    this.updateLocation = this.updateLocation.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n\n    this.state = {\n        location: {\n            city: '',\n            country: '',\n            date: null,\n            cityId: null,               \n            coord: {},\n            main: {\n                temp: null,\n                tempMax: null,\n                tempMin: null\n            },\n            weather: {\n                mainDesc: '',\n                desc: ''\n            },\n            week: []\n        },\n        savedCities: [],\n        user: {\n            city: '',\n            country: ''\n        },\n        myCities: [],\n        checked: false,\n        notFound: false\n        }\n    }\n\n    componentDidMount() {\n\n        // if there are no saved cities by default, then preload some cities\n        if(localStorage.getItem(\"savedCities\") === null){\n            localStorage.setItem(\"savedCities\", JSON.stringify([\"London\", \"New York\", \"Paris\", \"Tokyo\", \"Toronto\", \"Sydney\", \"Moscow\", \"Rome\", \"Berlin\"]));   \n        }\n\n        this.setState({\n            savedCities: JSON.parse(localStorage.getItem(\"savedCities\"))\n        })             \n\n        navigator.geolocation.getCurrentPosition(function(position) {\n            new APIRequest().reverseLookup().then(res => {\n\n                let copyState = this.state.user;\n                copyState = {\n                    city: res.results[0].components.city,\n                    country: res.results[0].components.country                  \n                }\n\n                this.setState({ user: copyState }, ()=> {\n                    new APIRequest().request(`${this.state.user.city}, ${this.state.user.country}`).then(res=>{\n                        this.updateLocation(res);\n                    });                 \n                });\n            });\n        }.bind(this));  \n\n        this.quickWeather();\n        \n    }\n \n\n    quickWeather() {\n        \n        new APIRequest().requestCities(JSON.parse(localStorage.getItem(\"savedCities\"))).then(res=>{\n            this.setState({ myCities: res });\n        });\n    }\n\n    saveCity (city, action){\n        \n        let savedCitiesCopy = this.state.savedCities;\n        \n        if(action === 'ADD') {\n            let cityFound = this.state.savedCities.find(item=>item===city)\n            if(!cityFound){\n                savedCitiesCopy.unshift(city);\n            }\n        } else {      \n            savedCitiesCopy = savedCitiesCopy.filter(item => item !== city);\n        }\n        \n        this.setState({ savedCities: savedCitiesCopy }, ()=> {\n            localStorage.setItem(\"savedCities\", JSON.stringify(this.state.savedCities));\n            this.quickWeather();\n        });\n    }\n\n    updateLocation(res) {\n\n        if(res[1].cod === \"404\"){\n            this.setState({ notFound: true });\n\n            return;\n        } else {\n            this.setState({ notFound: false });            \n        }\n\n\n        let data = res[0];\n\n        this.setState({ \n            location: {\n                city: data.name,\n                country: data.sys.country,                  \n                date: data.dt,\n                cityId: data.id,\n                coord: data.coord,\n                main: {\n                    temp: data.main.temp,\n                    tempMax: data.main.temp_max,\n                    tempMin: data.main.temp_min\n                },\n                weather: {\n                    main: data.weather[0].main,\n                    desc: data.weather[0].description \n                },\n                week: res[1].list\n            },\n        });\n    }\n\n    handleToggle() {\n        this.setState({ \n            checked: !this.state.checked \n        });\n    }\n\n    render() {\n\n        const navbarProps = {\n            updateLocation: this.updateLocation\n        }\n\n        const homeProps = {\n            location: this.state.location,\n            myCities: this.state.myCities,\n            checked: this.state.checked,\n            savedCities: this.state.savedCities,\n            saveCity: this.saveCity,\n            updateLocation: this.updateLocation\n        }\n\n        if(this.state.location.city === ''){\n            return <div id=\"loading\"></div>;\n        }\n\n        return (\n            <div className=\"App\">\n                <NavBar {...navbarProps} />\n                <div className=\"App-inner\">\n\n                {this.state.notFound ? <p className=\"no-results\">No results found</p>: \n                <div>\n                    <FormGroup row className=\"toggle\">\n                        <FormControlLabel\n                          control={\n                            <Switch\n                              checked={this.state.checked}\n                              onChange={this.handleToggle}\n                              value=\"checkedB\"\n                              color=\"primary\"\n                            />\n                          }\n                          label=\"C&#176; / F&#176;\"\n                        />\n                    </FormGroup>                            \n                        <BrowserRouter>\n                            <RouterSwitch>\n                                <Route exact={true} path={`${this.props.build === 'LOCAL' ? '/' : '/weather-v2/'}`} render={(props) => <Home \n                                                                        {...props} \n                                                                        {...homeProps}\n                                                                    />}\n                                />\n                                <Route path=\"/weather\" render={(props) => <Weather \n                                                                        {...props} {...this.state.location}\n                                                                    />}\n                                />                                   \n                                <Route component={NoMatch} />\n                            </RouterSwitch>\n                        </BrowserRouter>\n                    </div>\n                }   \n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst url = window.location.href;\nlet build = 'PRODUCTION';\n\nif(url.indexOf('localhost') > -1) {\n\tbuild = 'LOCAL'\n}\n\nReactDOM.render(<App build={build} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}